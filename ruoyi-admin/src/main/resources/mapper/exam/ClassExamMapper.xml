<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.ClassExamMapper">
    
    <resultMap type="ClassExam" id="ClassExamResult">
        <result property="id"    column="id"    />
        <result property="className"    column="class_name"    />
        <result property="examId"    column="exam_id"    />
    </resultMap>

    <sql id="selectClassExamVo">
        select id, class_name, exam_id from class_exam
    </sql>

    <select id="selectClassExamList" parameterType="ClassExam" resultMap="ClassExamResult">
        <include refid="selectClassExamVo"/>
        <where>  
            <if test="className != null  and className != ''"> and class_name like concat('%', #{className}, '%')</if>
            <if test="examId != null "> and exam_id = #{examId}</if>
        </where>
    </select>
    
    <select id="selectClassExamById" parameterType="Long" resultMap="ClassExamResult">
        <include refid="selectClassExamVo"/>
        where id = #{id}
    </select>

    <insert id="insertClassExam" parameterType="ClassExam" useGeneratedKeys="true" keyProperty="id">
        insert into class_exam
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="className != null and className != ''">class_name,</if>
            <if test="examId != null">exam_id,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="className != null and className != ''">#{className},</if>
            <if test="examId != null">#{examId},</if>
         </trim>
    </insert>

    <update id="updateClassExam" parameterType="ClassExam">
        update class_exam
        <trim prefix="SET" suffixOverrides=",">
            <if test="className != null and className != ''">class_name = #{className},</if>
            <if test="examId != null">exam_id = #{examId},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteClassExamById" parameterType="Long">
        delete from class_exam where id = #{id}
    </delete>

    <delete id="deleteClassExamByIds" parameterType="String">
        delete from class_exam where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>
</mapper>